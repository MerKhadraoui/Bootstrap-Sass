// @import "../../node_modules/bootstrap/scss/bootstrap.scss";

table {
  width: 100vw;
  height: 100vh;
  tr td {
    border: 1px rgb(255, 248, 248) solid;
    border-radius: 50%;
  }
}

$items-count: 15; // corresponds to the number of divs in your HTML

// Define animation
@keyframes move {
  from {
    border-radius: 10%;
  }

  to {
    border-radius: 50%;
  }
}

// Mixin to use animation
@mixin add-move-animation($duration) {
  animation-name: move;
  animation-duration: $duration;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  animation-timing-function: linear;
}

body {
  background-color: black;
  margin: 0;
}

.items-container table {
  width: 100vw;
  height: 100vh;
}

// For loop to randomize values for each div bar
@for $i from 1 through $items-count {
  td:nth-child(#{$i}) {
    background: linear-gradient(
      to top right,
      lighten(rgb(214, 203, 203), random(40)),
      rgba(darken(gray, random(10)), 1)
    );
    // random() will return a number between 1-100 with no argument being passed to it, or when you pass in a single integer parameter to define the upper limit. random(20) will return a number between 1-20.

    border-radius: 0 0 ((random(50) + 10 + px)) ((random(50) + 10 + px));
    transform-origin: 0 0;

    @if (($i % 2) != 0) {
      border-radius: ((random(50) + 10 + px)) ((random(50) + 10 + px)) 0 0;
      background: linear-gradient(
        to top right,
        lighten(rgb(156, 22, 22), random(40)),
        rgba(darken(rgb(187, 16, 16), random(10)), 1)
      );
    }

    @include add-move-animation(random(5) + 1 + s);
  }
}

td:nth-child(odd) {
  transform-origin: 0 100%;
}
